// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package detectivepb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DetectiveClient is the client API for Detective service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DetectiveClient interface {
	//  FindClues searches for a pattern in the given input content of the form <Clues: ".*"> and
	//  returns a new line separated string with all the matched string.
	FindClues(ctx context.Context, in *FindCluesRequest, opts ...grpc.CallOption) (*FindCluesResponse, error)
}

type detectiveClient struct {
	cc grpc.ClientConnInterface
}

func NewDetectiveClient(cc grpc.ClientConnInterface) DetectiveClient {
	return &detectiveClient{cc}
}

func (c *detectiveClient) FindClues(ctx context.Context, in *FindCluesRequest, opts ...grpc.CallOption) (*FindCluesResponse, error) {
	out := new(FindCluesResponse)
	err := c.cc.Invoke(ctx, "/ihtkas.goexamples.gomeet22.Detective/FindClues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DetectiveServer is the server API for Detective service.
// All implementations must embed UnimplementedDetectiveServer
// for forward compatibility
type DetectiveServer interface {
	//  FindClues searches for a pattern in the given input content of the form <Clues: ".*"> and
	//  returns a new line separated string with all the matched string.
	FindClues(context.Context, *FindCluesRequest) (*FindCluesResponse, error)
	mustEmbedUnimplementedDetectiveServer()
}

// UnimplementedDetectiveServer must be embedded to have forward compatible implementations.
type UnimplementedDetectiveServer struct {
}

func (*UnimplementedDetectiveServer) FindClues(context.Context, *FindCluesRequest) (*FindCluesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindClues not implemented")
}
func (*UnimplementedDetectiveServer) mustEmbedUnimplementedDetectiveServer() {}

func RegisterDetectiveServer(s *grpc.Server, srv DetectiveServer) {
	s.RegisterService(&_Detective_serviceDesc, srv)
}

func _Detective_FindClues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindCluesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DetectiveServer).FindClues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ihtkas.goexamples.gomeet22.Detective/FindClues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DetectiveServer).FindClues(ctx, req.(*FindCluesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Detective_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ihtkas.goexamples.gomeet22.Detective",
	HandlerType: (*DetectiveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindClues",
			Handler:    _Detective_FindClues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go-meet-bangalore-2022/protos/service.proto",
}
